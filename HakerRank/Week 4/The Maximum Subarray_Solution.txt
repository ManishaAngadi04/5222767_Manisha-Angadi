//Problem 2 - The Maximum Subarray

#include <stdio.h>

int max(int a, int b) { return (a > b) ? a : b; }

void maxSubarray(int arr[], int n, int *maxSub, int *maxSeq) {
    int current = arr[0];
    *maxSub = arr[0];
    
    for (int i = 1; i < n; i++) {
        current = max(arr[i], current + arr[i]);
        *maxSub = max(*maxSub, current);
    }

    *maxSeq = arr[0];
    int hasPositive = 0, sumPos = 0;
    
    for (int i = 0; i < n; i++) {
        if (arr[i] > 0) {
            hasPositive = 1;
            sumPos += arr[i];
        }
        if (arr[i] > *maxSeq) *maxSeq = arr[i]; 
    }

    if (hasPositive) *maxSeq = sumPos;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n;
        scanf("%d", &n);

        int arr[n];
        for (int i = 0; i < n; i++) scanf("%d", &arr[i]);

        int maxSub, maxSeq;
        maxSubarray(arr, n, &maxSub, &maxSeq);
        printf("%d %d\n", maxSub, maxSeq);
    }
    return 0;
}
